{"version":3,"sources":["components/habit.jsx","components/addTodo.jsx","components/habits.jsx","components/nav.jsx","app.jsx","components/nav2.jsx","components/addTodo2.jsx","components/habit2.jsx","components/reset2.jsx","components/habits2.jsx","tracker.jsx","index.js"],"names":["Habit","handleInc","props","onIncrease","habit","handleDec","onDecrease","handleDel","onDelete","console","log","name","this","count","className","onClick","Component","AddTodo","memo","inputRef","React","createRef","formRef","action","ref","type","e","preventDefault","current","value","onAdd","reset","Habits","handleIncrease","handleDecrease","handleDelete","handleAdd","habits","map","item","id","onReset","Nav","comment","totalCount","Nav2","countAll","AddTodo2","useRef","Habit2","onPlus","onMinus","onRemove","Reset2","Habits2","Tracker","useState","setHabits","counter","filter","useCallback","newHabit","newHabits","push","Date","now","useEffect","length","index","indexOf","resetHabits","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbba159e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Habit extends Component {\n    componentDidMount(){\n        console.log(\"Asdf\")\n    }\n    componentWillUnmount(){\n        console.log(\"fdsa\");\n    }\n    handleInc = ()=>{\n        this.props.onIncrease(this.props.habit);        \n    }\n    handleDec = ()=>{\n        this.props.onDecrease(this.props.habit);\n    }\n    handleDel = ()=>{\n        this.props.onDelete(this.props.habit);\n    }\n    render() {\n        // const {name, count} = this.props.habit;\n        const name = this.props.habit.name;\n        const count = this.props.habit.count;        \n        return (\n            <li className=\"habit\">\n                <span className=\"habit-name\">{name}</span>\n                <span className=\"habit-count\">:{count}</span>\n                <button className=\"habit-button habit-increase\" onClick={this.handleInc}>+</button>\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDec}>-</button>\n                <button className=\"habit-button habit-delete\" onClick={this.handleDel}>remove</button>\n            </li>\n        )\n    }\n}\n\n// state값이 없다면 함수로 컴포넌트를 구성 가능하고, 특정 컴포넌트에 데이터 변동이 없을 시 렌더링 하지 않고자 한다면 pureComponent(클래스) / memo(함수)를 사용\nexport default Habit;","\nimport React,{memo} from 'react'\n\n// function AddTodo(props) {\n//     const inputRef = React.createRef();\n//     const formRef =React.createRef();    \n//     function addTodo(e){\n//         inputRef.current.value&&props.onAdd(inputRef.current.value);\n//         formRef.current.reset();\n//     }    \n//     return (\n//         <form action=\"\" ref={formRef}>\n//             <input type=\"text\" ref={inputRef}/>\n//             <button onClick={addTodo}>add new todo</button>\n//         </form>\n//     )\n// }\n\nconst AddTodo = memo(props=>{\n    const inputRef = React.createRef();\n    const formRef =React.createRef();    \n    function addTodo(e){\n        e.preventDefault();\n        inputRef.current.value&&props.onAdd(inputRef.current.value);\n        formRef.current.reset();\n    }    \n    return (\n        <form action=\"\" ref={formRef}>\n            <input type=\"text\" ref={inputRef}/>\n            <button onClick={addTodo}>add new todo</button>\n        </form>\n    )\n})\n\nexport default AddTodo;\n\n\n\n\n\n","import React, { Component } from 'react'\nimport Habit from './habit'\nimport AddTodo from './addTodo'\n\nclass Habits extends Component {    \n    handleIncrease = (habit)=>{\n        this.props.onIncrease(habit);\n    }\n    handleDecrease = (habit)=>{\n        this.props.onDecrease(habit);\n    }\n    handleDelete = (habit)=>{\n        this.props.onDelete(habit);\n    }\n    handleAdd = (name)=>{\n        this.props.onAdd(name);\n    }\n    // 데이터를 갖고있는 곳에서 데이터를 수정하는 게 맞겠지?\n    render() {\n        return (\n            <>\n            <AddTodo onAdd={this.handleAdd}/>\n            <ul>\n                {this.props.habits.map((item)=>(\n                    <Habit key={item.id} habit={item} onIncrease={this.handleIncrease} onDecrease={this.handleDecrease} onDelete={this.handleDelete}/>\n                ))}\n            </ul>\n            <button onClick={this.props.onReset}>ResetAll</button>            \n            </>\n        )\n    }\n}\n\nexport default Habits\n","import React, { Component } from 'react'\n\nclass Nav extends Component {\n    render() {\n        // let count = 0;\n        // this.props.habits.forEach((item)=>{\n        //     count = count + parseInt(item.count);\n        //     // console.log(count);\n        //     // return count;    \n        //     console.log(item.count, count);\n            \n        // });\n        // console.log(count);\n        // const comment=count<=1?\" todo now\":\" todos now\";\n        const comment = this.props.totalCount<=1?\" habit now\": \"habits now\"\n        return (\n            <nav>\n                You're doing {this.props.totalCount}{ comment} \n            </nav>\n        )\n    }\n}\n\nexport default Nav","import React, { Component } from 'react';\nimport Habits from './components/habits';\nimport Nav from './components/nav';\n// import Reset from './components/reset'\nimport './app.css';\nclass App extends Component {\n  state={\n    habits:[\n        // {id:1, name: \"Reading\", count:0},\n        // {id:2, name: \"Running\", count:0},\n        // {id:3, name: \"Coding\", count:0}\n    ]\n}\nhandleIncrease = (habit)=>{\n    const habits = [...this.state.habits]; \n    const index = habits.indexOf(habit);\n    habits[index].count++;\n    this.setState({habits:habits});\n}\nhandleDecrease = (habit)=>{\n    const habits = [...this.state.habits];\n    habit.count>0?habits[habits.indexOf(habit)].count--:habits[habits.indexOf(habit)].count=0;\n    this.setState({habits:habits});\n}\nhandleDelete = (habit)=>{\n    const habits = this.state.habits.filter((item)=>{\n        return item.id!==habit.id;\n    });   \n    this.setState({habits});\n}\nhandleAdd = (name)=>{  \n  const habits = [...this.state.habits];\n  habits.push({id:Date.now(), name:name, count:0});\n  this.setState({habits});\n}\nhandleReset = ()=>{\n  const habits= this.state.habits.map((item)=>{\n    item.count=0;\n    return item;\n  })  \n  this.setState({habits});\n}\n// 여기서 만든 함수의 인자로 무엇을 전달할 지가 결국에는 최하위/실제로 쓰이는 컴포넌트에서 정해지는 거다 준석아!!!!!!!!\n\n  render() {\n    return (\n      <div>\n        <Nav totalCount={this.state.habits.filter((item)=>item.count>0).length}/>        \n        <Habits habits={this.state.habits} onIncrease={this.handleIncrease} onDecrease={this.handleDecrease} onDelete={this.handleDelete} onAdd={this.handleAdd} onReset={this.handleReset}></Habits>\n        {/* <Reset habits={this.state.habits} onReset={this.handleReset}/> */}\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n\n// 그냥 순수 자바스크립트아니고 컴포넌트임을 드러내기 위해서 jsx파일로 만든 거라고 생각하면 편함","import React from 'react'\n\nfunction Nav2(props) {\n    return (\n        <>\n        <h1>habitTracker</h1>\n        <span>\n            진행중인 습관:{props.countAll}개\n        </span>\n        </>\n    )\n}\n\nexport default Nav2\n","import React,{useRef} from 'react'\n\nfunction AddTodo2(props) {\n    function handleAdd(e){        \n        e.preventDefault();\n        console.log(inputRef.current.value);\n        props.onAdd(inputRef.current.value);\n        formRef.current.reset();\n    }\n    const inputRef = useRef();\n    const formRef = useRef();\n    return (\n        <form action=\"\" ref={formRef}>\n            <input type=\"text\" ref={inputRef}/>\n            <button onClick={handleAdd}>add</button>\n        </form>\n    )\n}\n\nexport default AddTodo2\n","import React from 'react'\n\nfunction Habit2(props) {    \n    function handlePlus(){\n        props.onPlus(props.habit);        \n    }\n    function handleMinus(){\n        props.onMinus(props.habit);\n    }\n    function handleRemove(){\n        props.onRemove(props.habit);\n    }\n    return (\n        <>\n        <li>\n            {props.habit.name}\n            <span>\n                {props.habit.count}회\n            </span>\n            <button onClick={handlePlus}>+</button>\n            <button onClick={handleMinus}>-</button>\n            <button onClick={handleRemove}>remove</button>\n        </li>\n        </>\n    )\n}\n\nexport default Habit2\n","import React from 'react'\n\nfunction Reset2(props) {\n    function handleReset(){\n        console.log(\"asdfasdfasdf\");\n        props.onReset(props.habits);\n    }\n    return (\n        <button onClick={handleReset}>\n            reset all\n        </button>\n    )\n}\n\nexport default Reset2\n","import React from 'react';\nimport AddTodo2 from './addTodo2';\nimport Habit2 from './habit2';\nimport Reset2 from './reset2';\n\nfunction Habits2(props) {\n    // const habits= props.habits;\n    return (\n        <>\n        <AddTodo2 onAdd={props.onAdd}/>\n        <ul>\n            {props.habits.map((habit)=>{\n                return <Habit2 habit={habit} onPlus={props.onPlus} onMinus={props.onMinus} onRemove={props.onRemove} key={habit.id}/>\n            })}\n            {/* {props.habits} */}\n        </ul>\n         <Reset2 habits={props.habits} onReset={props.onReset}/>\n        </>\n    )\n}\n\nexport default Habits2\n","import React,{useState, useEffect, useCallback} from 'react'\nimport Nav2 from './components/nav2';\nimport Habits2 from './components/habits2';\n\n\nfunction Tracker() {    \n    const [habits, setHabits] = useState([]);\n    const counter = habits.filter((habit)=>{\n        return habit.count>0;\n    })\n    function handlePlus(habit){\n        const newHabits = [...habits];\n        const index= newHabits.indexOf(habit);\n        newHabits[index].count++;\n        setHabits(newHabits);\n    }\n    function handleMinus(habit){\n        const newHabits = [...habits];\n        const index= newHabits.indexOf(habit);\n        newHabits[index].count>0?newHabits[index].count--:newHabits[index].count=0;\n        setHabits(newHabits);\n    }\n    const handleAdd = useCallback(((newHabit)=>{\n        const newHabits = [...habits];\n        newHabits.push({name:newHabit, count:0, id:Date.now()})\n        setHabits(newHabits);\n    }));\n    // function handleAdd(newHabit){        \n    //     console.log(newHabit);\n    //     const newHabits = [...habits];\n    //     newHabits.push({name:newHabit, count:0, id:Date.now()})\n    //     setHabits(newHabits);\n    // }\n    function handleRemove(habit){\n        // console.log(habit);\n        // const newHabits = [...habits];\n        // const newnewHabits = newHabits.filter((item)=>item.id !== habit.id);\n        // setHabits(newnewHabits);\n        const newHabits = habits.filter((item)=>{\n            return item.id !== habit.id;\n        })\n        setHabits(newHabits);\n    }\n    function handleReset(habits){\n        console.log(\"handleReset\");\n        console.log(habits);\n        const resetHabits = habits.map((habit)=>{\n            habit.count=0;\n            return habit;\n        })\n        console.log(resetHabits);\n        setHabits(resetHabits);\n    }\n    useEffect(()=>{\n        console.log(\"qwerm,.asdfkjdo\");\n    },[])\n    return (\n        <>\n            <Nav2 countAll={counter.length} />\n            <Habits2 habits={habits} onPlus={handlePlus} onMinus={handleMinus} onAdd={handleAdd} onRemove={handleRemove} onReset={handleReset}/>\n        </>\n    )\n}\n\nexport default Tracker\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// 브라우저가 이해할 수 있는 것은 HTML, CSS, JS 뿐인데 아래 코드와 같이 그 이외의 것들을 순수 JS로 바꿔서 이해할 수 있게 해주는 게 바로 바벨! 그리고 그렇게 변환된 아이들(컴포넌트)들을 HTML과 연결하는 작업을 해줘야 하는데 그것을 해주는 게 바로 react-dom.\nimport './index.css';\nimport App from './app';\nimport SimpleHabit from './simpleHabit';\nimport Tracker from './tracker';\nReactDOM.render(\n  <React.StrictMode>\n    <Tracker/>\n  </React.StrictMode>\n  // usestrict와 같음. 개발할 땐 스트릭모드 이용하고 배포할 땐 알아서 비활성화 됨. \n  ,\n  document.getElementById('root')\n  // react-dom을 이용해서 가지고온 root div에  <App/>이라는 컴포넌트를 연결한 것!\n);\n\n// state는 해당 컴포넌트 내부 데이터, props는 부모로부터 전달 받은 property라고 생각하면 편함 \n\n"],"sourceRoot":""}